//stamp/debug.h

#pragma once
#ifndef STAMP_DEBUG_H
#define STAMP_DEBUG_H

// Copyright 2025 Elijah Clark, Stamparkour
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include <stamp/define.h>
#include <stacktrace>
#include <iostream>

//enables debug messages
#define SWM_DEBUG
//pauses console after error
#define SWM_DEBUG_PAUSE

#if defined(SWM_DEBUG) 
#ifdef SWM_DEBUG_PAUSE 
#define STAMPSTACK() std::cout << std::to_string(std::stacktrace::current()) << std::endl << __FUNCTION__  << " " << __LINE__ << " " << __FILE__ << std::endl;
#define STAMPDMSG(msg) std::cout << msg << std::endl; std::cin.get()
#define STAMPERROR(con,msg) if(con) {STAMPSTACK(); std::cout << msg << std::endl; std::cin.get(); }
#else
#define STAMPSTACK() std::cout << std::to_string(std::stacktrace::current()) << std::endl
#define STAMPDMSG(msg) std::cout << msg << std::endl
#define STAMPERROR(con,msg) if(con) {STAMPSTACK(); std::cout << msg << std::endl; }
#endif
#else
#define STAMPSTACK()
#define STAMPDMSG(msg)
#define STAMPERROR(con,msg)
#endif

#define GLSTAMPERROR STAMPERROR(wm::checkOpenGLErrors(), "")
#define GLSTAMPERRORM(message) STAMPERROR(wm::checkOpenGLErrors(), message)

//DebugBreak(void)